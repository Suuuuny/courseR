#找變數
#Pclass & Sex
sum(is.na(train_data$pclass))
sum(is.na(train_data$sex))
train_data$PclassSex[train_data$pclass=='1' & train_data$sex=='male'] <- 'P1Male'
train_data$PclassSex[train_data$pclass=='2' & train_data$sex=='male'] <- 'P2Male'
train_data$PclassSex[train_data$pclass=='3' & train_data$sex=='male'] <- 'P3Male'
train_data$PclassSex[train_data$pclass=='1' & train_data$sex=='female'] <- 'P1Female'
train_data$PclassSex[train_data$pclass=='2' & train_data$sex=='female'] <- 'P2Female'
train_data$PclassSex[train_data$pclass=='3' & train_data$sex=='female'] <- 'P3Female'
train_data$PclassSex <- as.factor(train_data$PclassSex)
View(train_data)
library(ggplot2)
#畫圖
# X axis = Pclass; Y axis = female/male
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity")
#畫圖
# X axis = Pclass; Y axis = female/male
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="count")
#畫圖
# X axis = Pclass; Y axis = female/male
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity")
#畫圖
# X axis = Pclass; Y axis = female/male
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat='count', position='dodge')
#畫圖
# X axis = Pclass; Y axis = female/male
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity")
#
ggplot(data=train_data, aes(x=pime, y=sex, fill=sex)) +
geom_bar(stat="identity", position=position_dodge())
#
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity", position=position_dodge())
#畫圖
# X axis = Pclass; Y axis = female/male
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity")
#
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity", position=position_dodge())
#畫圖
# X axis = Pclass; Y axis = female/male
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity")
#
p1 <- train_data$PclassSex == "P1Male"
#
p1 <- train_data[train_data$PclassSex == "P1Male"]
#
p1 <- train_data[train_data$PclassSex == "P1Male"]
#
p1 <- train_data[PclassSex == "P1Male"]
library(ggplot2)
#讀檔
options(stringsAsFactors = F)
getwd()
setwd("/Users/sunny/Documents/GitHub/courseR")
train_data <- read.csv("./Project_3/titanicTrain.csv" , fileEncoding = "big5")
test_data <- read.csv("./Project_3/titanicQuestion.csv" , fileEncoding = "big5")
#將NA值的列去掉
train_data <- train_data[ 1:1000, ]
#找變數
#Pclass & Sex
sum(is.na(train_data$pclass)) #檢查pclass欄位有沒有NA值
sum(is.na(train_data$sex)) #檢查sex欄位有沒有NA值
#combind Pclass & Sex
train_data$PclassSex[train_data$pclass=='1' & train_data$sex=='male'] <- 'P1Male'
train_data$PclassSex[train_data$pclass=='2' & train_data$sex=='male'] <- 'P2Male'
train_data$PclassSex[train_data$pclass=='3' & train_data$sex=='male'] <- 'P3Male'
train_data$PclassSex[train_data$pclass=='1' & train_data$sex=='female'] <- 'P1Female'
train_data$PclassSex[train_data$pclass=='2' & train_data$sex=='female'] <- 'P2Female'
train_data$PclassSex[train_data$pclass=='3' & train_data$sex=='female'] <- 'P3Female'
train_data$PclassSex <- as.factor(train_data$PclassSex)
ggplot(data=train_data, aes(x=pclass, y=sex, fill=sex)) +
geom_bar(stat="identity")
#
#parch & sibsp == 0 用ticket篩選
train_data$Fsize <- train_data$parch + train_data$sibsp +1
a <- train_data[train_data$Fsize == 1, ]
View(a)
group_by
#用boat當作變數
train_data[is.na(train_data$body) ] <- "0"
#用boat當作變數
train_data$body[is.na(train_data$body) ] <- "0"
View(train_data)
train_data$body[train_data$body != "0"] <- "1"
train_data$body <- as.factor(train_data$body)
library(e1071)
library(magrittr)
library(e1071)
library(magrittr)
install.packages("kernels")
library(kernels)
getwd()
train <- read.csv("./Project_3/titanicTrain.csv" , stringsAsFactors = F, na.strings = c("NA", ""), fileEncoding = "big5")
library(e1071) #svm package
library(magrittr)
options(stringsAsFactors = F)
getwd()
setwd("/Users/sunny/Documents/GitHub/courseR")
train <- read.csv("./Project_3/titanicTrain.csv" , na.strings = c("NA", ""), fileEncoding = "big5")
test <- read.csv("./Project_3/titanicQuestion.csv" , na.strings = c("NA", "") , fileEncoding = "big5")
#combind train檔和test檔，以便後續清理資料
all <- rbind(train, test)
#survived變數
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family variable
all$family <- all$parch + all$sibsp + 1
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
all$embarked[is.na(all$embarked)] <- "X"
all$embarked <- all$embarked %>% as.factor()
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
#SVM
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
install.packages("kernel")
?version
R.version
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
library(e1071) #svm package
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
library(e1071)
library(magrittr)
train <- read.csv("titanicTrain2.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test <- read.csv("titanicQuestion.csv", stringsAsFactors = F, na.strings = c("NA", ""))
all <- rbind(train, test)
#survived
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family
all$family <- all$parch + all$sibsp + 1
#boat
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark
all$embarked[is.na(all$embarked)] <- "X"
all$embarked <- all$embarked %>% as.factor()
#children
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
#SVM
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
titanic_svm
solution_svm <- predict(titanic_svm, clean_test)
solution_svm
test$survived <- solution_svm
write.csv(test, file = "answer.csv")
library(e1071)
library(magrittr)
train <- read.csv("titanicTrain2.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test <- read.csv("titanicQuestion.csv", stringsAsFactors = F, na.strings = c("NA", ""))
all <- rbind(train, test)
#survived
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family
all$family <- all$parch + all$sibsp + 1
#boat
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark
all$embarked[is.na(all$embarked)] <- "X"
all$embarked <- all$embarked %>% as.factor()
#children
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
library(e1071)
library(magrittr)
options(stringsAsFactors = F)
#讀檔
getwd()
setwd("/Users/sunny/Documents/GitHub/courseR")
train <- read.csv("./Project_3/titanicTrain.csv" , na.strings = c("NA", ""), fileEncoding = "big5")
test <- read.csv("./Project_3/titanicQuestion.csv" , na.strings = c("NA", "") , fileEncoding = "big5")
#combind train檔和test檔，以便後續清理資料
all <- rbind(train, test)
#survived
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family
all$family <- all$parch + all$sibsp + 1
#boat
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark
all$embarked[is.na(all$embarked)] <- "X"
all$embarked <- all$embarked %>% as.factor()
#children
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
library(e1071)
library(magrittr)
options(stringsAsFactors = F)
#讀檔
getwd()
setwd("/Users/sunny/Documents/GitHub/courseR")
train <- read.csv("./Project_3/titanicTrain.csv" , na.strings = c("NA", ""), fileEncoding = "big5")
test <- read.csv("./Project_3/titanicQuestion.csv" , na.strings = c("NA", "") , fileEncoding = "big5")
#combind train檔和test檔，以便後續清理資料
#combind train檔和test檔，以便後續清理資料
train <- train[1:1000,]
all <- rbind(train, test)
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family
all$family <- all$parch + all$sibsp + 1
#boat
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark
all$embarked[is.na(all$embarked)] <- "X"
all$embarked <- all$embarked %>% as.factor()
#children
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
titanic_svm
install.packages("caret")
library(caret)
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
titanic_svm
library(caret)
library(caret) #train function
library(e1071) #svm package
library(magrittr)
options(stringsAsFactors = F)
#讀檔
getwd()
setwd("/Users/sunny/Documents/GitHub/courseR")
train <- read.csv("./Project_3/titanicTrain.csv" , na.strings = c("NA", ""), fileEncoding = "big5")
test <- read.csv("./Project_3/titanicQuestion.csv" , na.strings = c("NA", "") , fileEncoding = "big5")
train <- train[1:1000,]
#combind train檔和test檔，以便後續清理資料
all <- rbind(train, test)
#要建模型的變數都要變成factor
#survived variable
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex variable
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family variable
all$family <- all$parch + all$sibsp + 1
#boat variable
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body variable
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark variable
all$embarked[is.na(all$embarked)] <- "X" #如果NA值沒有處理，後續train模型會出錯
all$embarked <- all$embarked %>% as.factor()
#children variable
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
#清理好的all data要切割成要用來train的檔案和predict的檔案
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
#SVM
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
titanic_svm
solution_svm <- predict(titanic_svm, clean_test)
solution_svm
test$survived <- solution_svm
write.csv(test, file = "answer.csv")
test$survived <- solution_svm
library(caret) #train function
library(e1071) #svm package
library(magrittr)
options(stringsAsFactors = F)
getwd()
setwd("/Users/sunny/Documents/GitHub/courseR")
train <- read.csv("./Project_3/titanicTrain.csv" , na.strings = c("NA", ""), fileEncoding = "big5")
test <- read.csv("./Project_3/titanicQuestion.csv" , na.strings = c("NA", "") , fileEncoding = "big5")
train <- train[1:1000,]
#combind train檔和test檔，以便後續清理資料
all <- rbind(train, test)
all$survived <- all$survived %>% as.factor
all$sex <- all$sex %>% as.factor
all$pclass <- all$pclass %>% as.ordered
#PclassSex variable
all$pclassSex[all$pclass=='1' & all$sex=='male'] <- 'P1Male'
all$pclassSex[all$pclass=='2' & all$sex=='male'] <- 'P2Male'
all$pclassSex[all$pclass=='3' & all$sex=='male'] <- 'P3Male'
all$pclassSex[all$pclass=='1' & all$sex=='female'] <- 'P1Female'
all$pclassSex[all$pclass=='2' & all$sex=='female'] <- 'P2Female'
all$pclassSex[all$pclass=='3' & all$sex=='female'] <- 'P3Female'
all$pclassSex <- as.factor(all$pclassSex)
#family variable
all$family <- all$parch + all$sibsp + 1
#boat variable
all$boat[is.na(all$boat)] <- "0"
all$boat[all$boat != "0"] <- "1"
all$boat <- all$boat %>% as.factor()
#body variable
all$body[is.na(all$body)] <- "0"
all$body[all$body != "0"] <- "1"
all$body <- all$body %>% as.factor()
#embark variable
all$embarked[is.na(all$embarked)] <- "X" #如果NA值沒有處理，後續train模型會出錯
all$embarked <- all$embarked %>% as.factor()
#children variable
all$age[all$age <= 14] <- 1
all$age[all$age != 1] <- 0
all$age[is.na(all$age)] <- 0
all$age <- all$age %>% as.factor()
#清理好的all data要切割成要用來train的檔案和predict的檔案
clean_test <- all[is.na(all$survived),]
clean_train <- all[!is.na(all$survived),]
#SVM
set.seed(1001)
titanic_svm <- train(survived~ pclass + sex + family + body + boat, data = clean_train, method='svmRadial', preProcess= c('center', 'scale'), trControl=trainControl(method="cv", number = 5))
titanic_svm
solution_svm <- predict(titanic_svm, clean_test)
solution_svm
test$survived <- solution_svm
setwd("/Users/sunny/Documents/GitHub/courseR/Project_3")
write.csv(test, file = "answer.csv")
getwd()
train <- read.csv("titanicTrain.csv")
library(magrittr)
getwd()
train <- read.csv("titanicTrain.csv")
train <- train[c(1:1000),]
# Train data 上面的NA
str(train)
sapply(train, function(x) {sum(is.na(x))})
View(train)
ggplot(data=train, aes(x=pclass, y=survived, fill=survived)) +
geom_bar(stat="identity", position=position_dodge())
# Pclass
ggplot(data=train, aes(x=pclass, fill=survived)) +
geom_bar(stat="identity", position=position_dodge())
# Pclass
ggplot(data=train, aes(x=pclass, y=survived, fill=survived)) +
geom_bar(stat="identity", position=position_dodge())
p4 <- ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Training data only') +
theme(legend.position="none") + theme_grey()
# Pclass
ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Training data only') +
theme(legend.position="none") + theme_grey()
# Pclass
ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived, colour="pink")) +
geom_bar(stat='count', position='dodge') + labs(x = 'Train data only') +
theme(legend.position="none") + theme_grey()
ggplot(train[!is.na(train$survived),], aes(x = sex, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'Train data') +
geom_label(stat='count', aes(label=..count..))
ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Train data') +
theme(legend.position="none") + theme_grey()
ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Train data') +
theme(legend.position="none") + theme_grey() +
geom_label(stat='count', aes(label=..count..))
library(magrittr)
library(magrittr)
# Read the titanicTrain data and store it in titanic
getwd()
train <- read.csv("titanicTrain.csv")
train <- train[c(1:1000),]
# Train data 上面的NA
str(train)
# Train data 上面的NA
str(train)
# Pclass
ggplot(train[!is.na(train$survived),], aes(x = pclass, fill = survived)) +
geom_bar(stat='count', position='dodge') + labs(x = 'Train data') +
theme(legend.position="none") + theme_grey() +
geom_label(stat='count', aes(label=..count..))
# Sex
ggplot(train[!is.na(train$survived),], aes(x = sex, fill = survived)) +
geom_bar(stat='count', position='dodge') + theme_grey() +
labs(x = 'Train data') +
geom_label(stat='count', aes(label=..count..))
train$embarked <- train$embarked %>% as.factor
summary(train$embarked[train$survived==0])
summary(train$embarked[train$survived==1])
embark <- cbind(summary(train$embarked[train$survived==0]),summary(train$embarked[train$survived==1]))
embark <- embark[-1,] %>% t
rownames(embark) <- c("0","1")
barplot(embark,col=c("gray","black"),main="embarked variable",beside=TRUE,ylab="counts")
legend("topright", inset=.02,title="Survive",
c("0","1"), fill=c("gray","black"), horiz=TRUE, cex=0.8)
family <- train$parch + train$sibsp + 1
train <- cbind(train,family)
ps0 <- train$family[train$survived==0] %>% as.factor %>% summary
ps1 <- train$family[train$survived==1] %>% as.factor %>% summary %>% c(.,0)
family <- rbind(ps0,ps1)
rm(ps0)
rm(ps1)
barplot(family,col=c("gray","black"),main="family",beside=TRUE,ylab="counts",xlab="Number of people")
